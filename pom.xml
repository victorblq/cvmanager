<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.1.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<groupId>br.com.victorblq</groupId>
	<artifactId>cvmanager</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<name>cvmanager</name>
	<description>Little application to manage your cv</description>

	<properties>
		<java.version>10</java.version>

		<node.version>v11.3.0</node.version>
		<yarn.version>v1.9.4</yarn.version>
		<ts.work-dir>src/main/ts/cvmanager</ts.work-dir>
		<node.install-dir>${user.home}/.node-cvmanager</node.install-dir>
	</properties>

	<profiles>
		<profile>
			<id>development</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<active.profile>development</active.profile>
				<final-name>${project.artifactId}-${project.version}-DEV</final-name>
				<frontend.environment>run build-development</frontend.environment>
			</properties>
		</profile>
		<profile>
			<id>test</id>
			<properties>
				<active.profile>test</active.profile>
				<final-name>${project.artifactId}-${project.version}-TEST</final-name>
				<frontend.environment>run build-test</frontend.environment>
			</properties>
		</profile>
		<profile>
			<id>production</id>
			<properties>
				<active.profile>production</active.profile>
				<final-name>${project.artifactId}-${project.version}-PRODUCTION</final-name>
				<frontend.environment>run build-production</frontend.environment>
			</properties>
		</profile>
	</profiles>

	<dependencies>
		<!-- Spring boot starter -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

		<!-- PostgreSQL -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- Lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- Spring boot maven plugin -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!-- Maven front end plugin -->
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>1.6</version>
				<configuration>
					<nodeVersion>${node.version}</nodeVersion>
					<yarnVersion>${yarn.version}</yarnVersion>
					<workingDirectory>${ts.work-dir}</workingDirectory>
					<installDirectory>${node.install-dir}</installDirectory>
				</configuration>
				<executions>
					<execution>
						<id>install node and npm</id>
						<goals>
							<goal>install-node-and-yarn</goal>
						</goals>
					</execution>
					<execution>
						<id>yarn install</id>
						<goals>
							<goal>yarn</goal>
						</goals>
						<configuration>
							<arguments>install --mutex network</arguments>
						</configuration>
					</execution>
					<execution>
						<id>ng build</id>
						<goals>
							<goal>yarn</goal>
						</goals>
						<configuration>
							<arguments>${frontend.environment}</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
